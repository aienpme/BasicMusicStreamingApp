// Generated by view binder compiler. Do not edit!
package com.bma.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bma.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDownloadSelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar downloadProgress;

  @NonNull
  public final ImageView downloadStatusIcon;

  @NonNull
  public final TextView downloadStatusText;

  @NonNull
  public final TextView itemDetails;

  @NonNull
  public final TextView itemSubtitle;

  @NonNull
  public final TextView itemTitle;

  @NonNull
  public final CheckBox selectionCheckbox;

  private ItemDownloadSelectionBinding(@NonNull LinearLayout rootView,
      @NonNull ProgressBar downloadProgress, @NonNull ImageView downloadStatusIcon,
      @NonNull TextView downloadStatusText, @NonNull TextView itemDetails,
      @NonNull TextView itemSubtitle, @NonNull TextView itemTitle,
      @NonNull CheckBox selectionCheckbox) {
    this.rootView = rootView;
    this.downloadProgress = downloadProgress;
    this.downloadStatusIcon = downloadStatusIcon;
    this.downloadStatusText = downloadStatusText;
    this.itemDetails = itemDetails;
    this.itemSubtitle = itemSubtitle;
    this.itemTitle = itemTitle;
    this.selectionCheckbox = selectionCheckbox;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDownloadSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDownloadSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_download_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDownloadSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.download_progress;
      ProgressBar downloadProgress = ViewBindings.findChildViewById(rootView, id);
      if (downloadProgress == null) {
        break missingId;
      }

      id = R.id.download_status_icon;
      ImageView downloadStatusIcon = ViewBindings.findChildViewById(rootView, id);
      if (downloadStatusIcon == null) {
        break missingId;
      }

      id = R.id.download_status_text;
      TextView downloadStatusText = ViewBindings.findChildViewById(rootView, id);
      if (downloadStatusText == null) {
        break missingId;
      }

      id = R.id.item_details;
      TextView itemDetails = ViewBindings.findChildViewById(rootView, id);
      if (itemDetails == null) {
        break missingId;
      }

      id = R.id.item_subtitle;
      TextView itemSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (itemSubtitle == null) {
        break missingId;
      }

      id = R.id.item_title;
      TextView itemTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemTitle == null) {
        break missingId;
      }

      id = R.id.selection_checkbox;
      CheckBox selectionCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (selectionCheckbox == null) {
        break missingId;
      }

      return new ItemDownloadSelectionBinding((LinearLayout) rootView, downloadProgress,
          downloadStatusIcon, downloadStatusText, itemDetails, itemSubtitle, itemTitle,
          selectionCheckbox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.bma.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bma.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemQueueSongBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView albumArtwork;

  @NonNull
  public final ImageView dragHandle;

  @NonNull
  public final ConstraintLayout draggableContainer;

  @NonNull
  public final TextView queuePosition;

  @NonNull
  public final ImageButton removeButton;

  @NonNull
  public final TextView songArtist;

  @NonNull
  public final LinearLayout songInfoLayout;

  @NonNull
  public final TextView songTitle;

  private ItemQueueSongBinding(@NonNull LinearLayout rootView, @NonNull ImageView albumArtwork,
      @NonNull ImageView dragHandle, @NonNull ConstraintLayout draggableContainer,
      @NonNull TextView queuePosition, @NonNull ImageButton removeButton,
      @NonNull TextView songArtist, @NonNull LinearLayout songInfoLayout,
      @NonNull TextView songTitle) {
    this.rootView = rootView;
    this.albumArtwork = albumArtwork;
    this.dragHandle = dragHandle;
    this.draggableContainer = draggableContainer;
    this.queuePosition = queuePosition;
    this.removeButton = removeButton;
    this.songArtist = songArtist;
    this.songInfoLayout = songInfoLayout;
    this.songTitle = songTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemQueueSongBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemQueueSongBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_queue_song, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemQueueSongBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.albumArtwork;
      ImageView albumArtwork = ViewBindings.findChildViewById(rootView, id);
      if (albumArtwork == null) {
        break missingId;
      }

      id = R.id.dragHandle;
      ImageView dragHandle = ViewBindings.findChildViewById(rootView, id);
      if (dragHandle == null) {
        break missingId;
      }

      id = R.id.draggableContainer;
      ConstraintLayout draggableContainer = ViewBindings.findChildViewById(rootView, id);
      if (draggableContainer == null) {
        break missingId;
      }

      id = R.id.queuePosition;
      TextView queuePosition = ViewBindings.findChildViewById(rootView, id);
      if (queuePosition == null) {
        break missingId;
      }

      id = R.id.removeButton;
      ImageButton removeButton = ViewBindings.findChildViewById(rootView, id);
      if (removeButton == null) {
        break missingId;
      }

      id = R.id.songArtist;
      TextView songArtist = ViewBindings.findChildViewById(rootView, id);
      if (songArtist == null) {
        break missingId;
      }

      id = R.id.songInfoLayout;
      LinearLayout songInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (songInfoLayout == null) {
        break missingId;
      }

      id = R.id.songTitle;
      TextView songTitle = ViewBindings.findChildViewById(rootView, id);
      if (songTitle == null) {
        break missingId;
      }

      return new ItemQueueSongBinding((LinearLayout) rootView, albumArtwork, dragHandle,
          draggableContainer, queuePosition, removeButton, songArtist, songInfoLayout, songTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

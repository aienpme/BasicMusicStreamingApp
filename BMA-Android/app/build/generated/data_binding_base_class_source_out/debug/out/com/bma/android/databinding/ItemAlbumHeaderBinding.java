// Generated by view binder compiler. Do not edit!
package com.bma.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bma.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAlbumHeaderBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout albumInfo;

  @NonNull
  public final TextView albumNameText;

  @NonNull
  public final TextView artistText;

  @NonNull
  public final ImageView expandIcon;

  @NonNull
  public final ImageView folderIcon;

  @NonNull
  public final TextView trackCountText;

  private ItemAlbumHeaderBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout albumInfo, @NonNull TextView albumNameText,
      @NonNull TextView artistText, @NonNull ImageView expandIcon, @NonNull ImageView folderIcon,
      @NonNull TextView trackCountText) {
    this.rootView = rootView;
    this.albumInfo = albumInfo;
    this.albumNameText = albumNameText;
    this.artistText = artistText;
    this.expandIcon = expandIcon;
    this.folderIcon = folderIcon;
    this.trackCountText = trackCountText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAlbumHeaderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAlbumHeaderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_album_header, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAlbumHeaderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.albumInfo;
      LinearLayout albumInfo = ViewBindings.findChildViewById(rootView, id);
      if (albumInfo == null) {
        break missingId;
      }

      id = R.id.albumNameText;
      TextView albumNameText = ViewBindings.findChildViewById(rootView, id);
      if (albumNameText == null) {
        break missingId;
      }

      id = R.id.artistText;
      TextView artistText = ViewBindings.findChildViewById(rootView, id);
      if (artistText == null) {
        break missingId;
      }

      id = R.id.expandIcon;
      ImageView expandIcon = ViewBindings.findChildViewById(rootView, id);
      if (expandIcon == null) {
        break missingId;
      }

      id = R.id.folderIcon;
      ImageView folderIcon = ViewBindings.findChildViewById(rootView, id);
      if (folderIcon == null) {
        break missingId;
      }

      id = R.id.trackCountText;
      TextView trackCountText = ViewBindings.findChildViewById(rootView, id);
      if (trackCountText == null) {
        break missingId;
      }

      return new ItemAlbumHeaderBinding((ConstraintLayout) rootView, albumInfo, albumNameText,
          artistText, expandIcon, folderIcon, trackCountText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

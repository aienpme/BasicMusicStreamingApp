// Generated by view binder compiler. Do not edit!
package com.bma.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bma.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQueueBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final LinearLayout emptyStateLayout;

  @NonNull
  public final RecyclerView queueRecyclerView;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final ConstraintLayout topBar;

  @NonNull
  public final TextView upNextHeader;

  private ActivityQueueBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backButton,
      @NonNull LinearLayout emptyStateLayout, @NonNull RecyclerView queueRecyclerView,
      @NonNull TextView titleText, @NonNull ConstraintLayout topBar,
      @NonNull TextView upNextHeader) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.emptyStateLayout = emptyStateLayout;
    this.queueRecyclerView = queueRecyclerView;
    this.titleText = titleText;
    this.topBar = topBar;
    this.upNextHeader = upNextHeader;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQueueBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQueueBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_queue, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQueueBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.emptyStateLayout;
      LinearLayout emptyStateLayout = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateLayout == null) {
        break missingId;
      }

      id = R.id.queueRecyclerView;
      RecyclerView queueRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (queueRecyclerView == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.topBar;
      ConstraintLayout topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      id = R.id.upNextHeader;
      TextView upNextHeader = ViewBindings.findChildViewById(rootView, id);
      if (upNextHeader == null) {
        break missingId;
      }

      return new ActivityQueueBinding((ConstraintLayout) rootView, backButton, emptyStateLayout,
          queueRecyclerView, titleText, topBar, upNextHeader);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

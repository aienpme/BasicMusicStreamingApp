// Generated by view binder compiler. Do not edit!
package com.bma.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bma.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemAlbumStatsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView albumArtist;

  @NonNull
  public final ImageView albumArtwork;

  @NonNull
  public final TextView albumTitle;

  @NonNull
  public final TextView listeningTime;

  @NonNull
  public final TextView playCount;

  private ItemAlbumStatsBinding(@NonNull LinearLayout rootView, @NonNull TextView albumArtist,
      @NonNull ImageView albumArtwork, @NonNull TextView albumTitle,
      @NonNull TextView listeningTime, @NonNull TextView playCount) {
    this.rootView = rootView;
    this.albumArtist = albumArtist;
    this.albumArtwork = albumArtwork;
    this.albumTitle = albumTitle;
    this.listeningTime = listeningTime;
    this.playCount = playCount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemAlbumStatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemAlbumStatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_album_stats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemAlbumStatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.album_artist;
      TextView albumArtist = ViewBindings.findChildViewById(rootView, id);
      if (albumArtist == null) {
        break missingId;
      }

      id = R.id.album_artwork;
      ImageView albumArtwork = ViewBindings.findChildViewById(rootView, id);
      if (albumArtwork == null) {
        break missingId;
      }

      id = R.id.album_title;
      TextView albumTitle = ViewBindings.findChildViewById(rootView, id);
      if (albumTitle == null) {
        break missingId;
      }

      id = R.id.listening_time;
      TextView listeningTime = ViewBindings.findChildViewById(rootView, id);
      if (listeningTime == null) {
        break missingId;
      }

      id = R.id.play_count;
      TextView playCount = ViewBindings.findChildViewById(rootView, id);
      if (playCount == null) {
        break missingId;
      }

      return new ItemAlbumStatsBinding((LinearLayout) rootView, albumArtist, albumArtwork,
          albumTitle, listeningTime, playCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
